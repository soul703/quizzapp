services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: quizmaster-postgres
    environment:
      POSTGRES_DB: quizmaster
      POSTGRES_USER: quizmaster
      POSTGRES_PASSWORD: quizmaster123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - quizmaster-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quizmaster -d quizmaster"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: quizmaster-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - quizmaster-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # QuizMaster Backend Application
  app:
    build: .
    container_name: quizmaster-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/quizmaster
      SPRING_DATASOURCE_USERNAME: quizmaster
      SPRING_DATASOURCE_PASSWORD: quizmaster123
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quizmaster-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: quizmaster-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - quizmaster-network

volumes:
  postgres_data:
  redis_data:

networks:
  quizmaster-network:
    driver: bridge
